swagger: "2.0"
info:
  title: Scheduer Service
  description: This service is going to offload the services of handling the scheduling logic by registering the triggers
  version: 0.0.1

basePath: /v1/scheduler

paths:
  /jobs:
    post:
      tags:
        - Job
      summary: add a new job to scheuder
      operationId: addJob
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Job'
      deprecated: false
      parameters:
        - required: true
          name: body
          in: body
          schema:
            $ref: '#/definitions/Job'
      consumes: []
      produces:
        - application/octet-stream
    get:
      tags:
        - Job
      summary: get all jobs
      operationId: find jobs
      responses:
        '200':
          description: List of Service
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
      deprecated: false
      parameters: []
      produces:
        - application/octet-stream
  '/jobs/{jobGroup}/{jobName}':
    get:
      tags:
        - Job
      summary: get a job by job key
      operationId: getJob
      parameters:
        - name: jobGroup
          in: path
          required: true
          type: string
        - name: jobName
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Service
          schema:
            $ref: '#/definitions/Job'
      deprecated: false
      produces:
        - application/octet-stream
definitions:
  Job:
    type: object
    required:  # List the required properties here
      - name
      - group
      - connectionProperties
    properties:
      id:
        type: string
        example: b571f600-1a72-4e14-b058-a5bc55e355df
      name:
        type: string
        description: 'Job keys are composed of both a name and group, and the name must be unique within the group'
        example: reportingJob
      group:
        type: string
        description: 'Job keys are composed of both a name and group, and use the group to orgnize jobs'
        example: batchJob
      dependencies:
        type: array
        description: The job can only be triggered when the dependences are completed
        items:
          $ref: '#/definitions/JobKey'
      isDurable:
        type: boolean
        description: 'Whether or not the Job should remain stored after it is orphaned (no Triggers point to it).If not explicitly set, the default value is true'
        default: true
      description:
        type: string
        example: optional description.
      type:
        type: string
        description: the type of this job. Currently, we support jms and rest http request to trigger a task.e.g. this job will call a rest api to fire a business task.
        enum:
          - jms
          - restApi
      connectionProperties:
        type: object
        additionalProperties:
          type: string
          example: endpoint or jms topic
      status:
        type: string
        enum:
          - active
          - paused
      retry:
        type: integer
        description: job trigger retry
        format: int32
        default: 0
        example: 3
      jobDataMap:
        type: object
        description: the inforamtion will be passed to the task execution server
        additionalProperties:
          type: string
          example: ''
      triggers:
        type: array
        description: if the array is not null, will schedue the job by triggers'
        items:
          $ref: '#/definitions/Trigger'
  JobKey:
    type: object
    properties:
      name:
        type: string
        description: 'Job keys are composed of both a name and group, and the name must be unique within the group'
        example: reportingJob
      group:
        type: string
        description: 'Job keys are composed of both a name and group, and use the group to orgnize jobs'
        example: batchJob
x-components: {}